filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
setwd("D:/Works/OneDrive - UW/INFO201/info201-groupAA01-getting-the-facts-on-gun-violence-in-the-united-states")
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
source('D:/Works/OneDrive - UW/INFO201/info201-groupAA01-getting-the-facts-on-gun-violence-in-the-united-states/analysis.R')
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 5,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 12,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
