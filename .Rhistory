) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 300,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 10,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(hrbrthemes)
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
range_of_year <- seq(2013,2018)
state_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
select(state, total_impacts)
n_killed_n_injured <- s_df%>%
mutate(year = as.numeric(substr(s_df$date, 1, 4))) %>%
group_by(year)%>%
summarize(injured_num = sum(n_injured), killed_num = sum(n_killed))%>%
mutate()
tidy_num <- n_killed_n_injured%>%
gather(year, num)
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
library(shiny)
library(stringr)
library(plotly)
library(dplyr)
library(ggplot2)
histogram <- function(s_df, size, color) {
x_axis <- s_df%>%
group_by(state)%>%
summarize(total = sum(total_killed + total_injured))
p <- plot_ly(x_axis) %>%
add_bars(
x = ~state,
y = ~total,
color = I(color),
width = as.numeric(size)
) %>%
layout(
yaxis = list(title = paste("Total impacted number")),
title = paste(str_to_title("Total impacted Count Per Each State")
))
}
p
setwd("~/Documents/INFO201/info201-groupAA01-getting-the-facts-on-gun-violence-in-the-united-states/scripts")
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
library(shiny)
library(stringr)
library(plotly)
library(dplyr)
library(ggplot2)
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
setwd("~/Documents/INFO201/info201-groupAA01-getting-the-facts-on-gun-violence-in-the-united-states")
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
library(shiny)
library(stringr)
library(plotly)
library(dplyr)
library(ggplot2)
histogram <- function(s_df, size, color) {
x_axis <- s_df%>%
group_by(state)%>%
summarize(total = sum(total_killed + total_injured))
p <- plot_ly(x_axis) %>%
add_bars(
x = ~state,
y = ~total,
color = I(color),
width = as.numeric(size)
) %>%
layout(
yaxis = list(title = paste("Total impacted number")),
title = paste(str_to_title("Total impacted Count Per Each State")
))
}
p
# source scripts files
source("scripts/Histogram.R")
source("scripts/table.R")
server <- function(input, output) {
output$plot <- renderPlotly({
return(histogram(
s_df,
input$hist_size,
input$hist_color
))
})
output$mytable1 <- DT::renderDataTable({
DT::datatable(shooting_dataset[, input$show_vars, drop = FALSE])
})
}
# load libraries
library("shiny")
library("plotly")
source("scripts/Histogram.R")
source("scripts/table.R")
# bar chart sidebar
hist_sidebar_content <- sidebarPanel(
sliderInput(
inputId = "hist_size",
label = "Size of hist bars",
min = 0,
max = 1,
value = 0.5,
step = 0.1
),
selectInput(
inputId = "hist_color",
label = "Color of bars",
choices = c(
"blue", "red", "forestgreen",
"black", "deeppink"
),
selected = "forestgreen"
)
)
# plot
hist_main_content <- mainPanel(
plotlyOutput(
outputId = "plot"
)
)
# overview "page"
overview_panel <- tabPanel(
"Project Overview",
h1("Project Overview"),
h3("Project: A data driven state by state insight
into who uses guns and what they use them for."),
h4("\tProject Members: April Lee, Charlie Francesconi, Bryan Bernardi, Zhijian Zheng")
# overview "page"
overview_panel <- tabPanel(
"Project Overview",
h1("Project Overview"),
h3("Project: A data driven state by state insight
into who uses guns and what they use them for."),
h4("\tProject Members: April Lee, Charlie Francesconi, Bryan Bernardi, Zhijian Zheng")
#table "page"
table_sidebar_content <- sidebarPanel(
conditionalPanel(
'input.dataset === "shooting_dataset"',
checkboxGroupInput("show_vars", "Columns in dataframe to show:",
names(shooting_dataset), selected = names(shooting_dataset))
)
)
table_main_content <- mainPanel(
tabsetPanel(
id = 'dataset',
tabPanel("shooting_dataset", DT::dataTableOutput("mytable1"))
)
)
table_panel <- tabPanel(
"Shootings Table",
titlePanel("Table Filter"),
sidebarLayout(
table_sidebar_content,
table_main_content
)
)
# bar chart "page"
hist_panel <- tabPanel(
"People Impacted Bar Chart",
titlePanel("Interactive Bar Chart"),
sidebarLayout(
hist_sidebar_content,
hist_main_content
)
)
ui <- navbarPage(
"Gun Violence in the US Analysis",
overview_panel,
hist_panel,
table_panel
)
# overview "page"
overview_panel <- tabPanel(
"Project Overview",
h1("Project Overview"),
h3("Project: A data driven state by state insight
into who uses guns and what they use them for."),
h4("\tProject Members: April Lee, Charlie Francesconi, Bryan Bernardi, Zhijian Zheng")
ui <- navbarPage(
"Gun Violence in the US Analysis",
overview_panel,
hist_panel,
table_panel
)
# load libraries
library("shiny")
library("plotly")
source("scripts/Histogram.R")
source("scripts/table.R")
# bar chart sidebar
hist_sidebar_content <- sidebarPanel(
sliderInput(
inputId = "hist_size",
label = "Size of hist bars",
min = 0,
max = 1,
value = 0.5,
step = 0.1
),
selectInput(
inputId = "hist_color",
label = "Color of bars",
choices = c(
"blue", "red", "forestgreen",
"black", "deeppink"
),
selected = "forestgreen"
)
)
# plot
hist_main_content <- mainPanel(
plotlyOutput(
outputId = "plot"
)
)
# overview "page"
overview_panel <- tabPanel(
"Project Overview",
h1("Project Overview"),
h3("Project: A data driven state by state insight
into who uses guns and what they use them for."),
h4("\tProject Members: April Lee, Charlie Francesconi, Bryan Bernardi, Zhijian Zheng")
# overview "page"
overview_panel <- tabPanel(
"Project Overview",
h1("Project Overview"),
h3("Project: A data driven state by state insight
into who uses guns and what they use them for."),
h4("\tProject Members: April Lee, Charlie Francesconi, Bryan Bernardi, Zhijian Zheng")
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
library(shiny)
library(stringr)
library(plotly)
library(dplyr)
library(ggplot2)
histogram <- function(s_df, size, color) {
x_axis <- s_df%>%
group_by(state)%>%
summarize(total = sum(total_killed + total_injured))
p <- plot_ly(x_axis) %>%
add_bars(
x = ~state,
y = ~total,
color = I(color),
width = as.numeric(size)
) %>%
layout(
yaxis = list(title = paste("Total impacted number")),
title = paste(str_to_title("Total impacted Count Per Each State")
))
}
p
shooting_dataset <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
setwd("~/Documents/INFO201/info201-groupAA01-getting-the-facts-on-gun-violence-in-the-united-states")
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
s_df <- read.csv(file = "data/s_df_no_map.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# clean dataset
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# clean dataset
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# clean dataset
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 300,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 10,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
s_df <- read.csv(file = "data/s_df.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# clean dataset
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
s_df <- read.csv(file = "data/gun-violence-data_01-2013_03-2018.csv",header = TRUE, stringsAsFactors = FALSE)
library(stringr)
library(plotly)
library(dplyr)
library(tidyr)
# clean dataset
s_df <- s_df%>%
select(incident_id,date,state, city_or_county, address, n_killed, n_injured, longitude, latitude)
# change n_killed & n_injured to numeric
s_df$n_killed <- as.numeric(s_df$n_killed, na.exclude(s_df$n_killed))
s_df$n_injured <- as.numeric(s_df$n_injured, na.exclude(s_df$n_injured))
# range of year
range_of_year <- seq(2013,2018)
# number of shootings occurred
num_of_shootings <- nrow(s_df)
# total lives lost
num_of_lives_lost <- sum(s_df$n_killed)
# total injured
num_of_injured <- sum(s_df$n_injured)
# city that was most impacted by shootings
# defining 'impact'
city_with_most_shooting <- s_df %>%
group_by(city_or_county) %>%
summarize(occurence = n()) %>%
filter(occurence == max(occurence)) %>%
pull(city_or_county)
# city with most people murdered
city_with_most_killed <- s_df %>%
group_by(city_or_county) %>%
summarize(total_killed = sum(n_killed)) %>%
filter(total_killed == max(total_killed)) %>%
select(city_or_county, total_killed)
# state with most people impacted (both injured and murdered)
state_with_most_impacts <- s_df %>%
group_by(state) %>%
summarize(total_impacts = sum(n_killed) + sum(n_injured)) %>%
filter(total_impacts == max(total_impacts)) %>%
select(state, total_impacts)
# group by state to give state-wise stats
state_stat <- s_df %>%
group_by(state) %>%
summarize(
total_killed = sum(n_killed),
total_injured = sum(n_injured)
) %>%
arrange(- (total_killed + total_injured))
# df that we are interested in
s <- state_stat$state
t_k <- state_stat$total_killed
t_i <- state_stat$total_injured
# A bar chart
state_plot <- plot_ly(
x = ~t_i,
y = ~ reorder(s, t_i + t_k),
type = "bar",
orientation = "h",
name = "total_injured"
) %>%
add_trace(
x = ~t_k,
name = "total_killed"
) %>%
layout(
xaxis = list(title = "Total impacted"),
yaxis = list(title = "State"),
barmode = "stack",
title = "Total numbers of people impacted by the shooting in each state"
) %>%
add_annotations( # add annontations for accessibility
xref = "x",
yref = "y",
x = t_k + t_i + 300,
y = reorder(s, t_i + t_k),
text = paste0(t_i + t_k),
font = list(
family = "Arial",
size = 10,
color = "rgb(244, 30, 30)",
shadow = FALSE
),
showarrow = FALSE
)
state_plot
